ðŸ”Ž Issues Causing the Jump

isLayoutStable toggle delay

scrollSnapType: isLayoutStable && filteredEvents.length > 0 ? 'y mandatory' : 'none'


â†’ Snap is disabled at first, then turned on after setTimeout(() => setIsLayoutStable(true), 600).
That means the browser renders freely for 600ms (can scroll anywhere) â†’ then suddenly forces snap, causing the "jump."

Spline background resizing

await app.load('https://prod.spline.design/DC0L-NagpocfiwmY/scene.splinecode');


â†’ The canvas adjusts size dynamically after scene load, which changes layout height.
Even though you position: fixed it, the rendering pipeline may cause a single frame where content "pushes" â†’ triggers reflow â†’ snap recalculation.

Framer Motion animations in sections

initial={{ opacity: 0, x: -30 }}
whileInView={{ opacity: 1, x: 0 }}


â†’ These animations run after layout is computed. If height changes (e.g. scaling), it affects snap positions.

Mobile 100vh bug

style={{ height: 'calc(100vh - 4rem)' }}


â†’ On mobile Safari/Chrome, 100vh includes the browserâ€™s hidden address bar initially, then shrinks â†’ your snap position jumps.

Fonts not preloaded
The gradient text TECHFESTâ€™25 uses a custom tech font â†’ when it loads, text width/height changes â†’ pushes layout.

âœ… Fixes for Stability

Hereâ€™s what you can change:

Apply snap immediately but lock layout until stable

<div 
  className="overflow-y-scroll scroll-smooth relative"
  style={{
    height: 'calc(100dvh - 4rem)', // âœ… use `100dvh` for mobile
    scrollSnapType: filteredEvents.length > 0 ? 'y mandatory' : 'none',
    scrollPaddingTop: '4rem' // offset navbar
  }}
>


â†’ Use 100dvh instead of 100vh for mobile fix.
â†’ Donâ€™t delay snap activation â€” instead, preload data before rendering.

Prevent Spline from resizing layout

Keep the <canvas> absolutely fixed (position: fixed; inset: 0; z-index:-1;) â€” which you already have.

Add width:100%; height:100% CSS directly on parent to guarantee stability.

Donâ€™t animate container heights

Limit Framer Motion animations to opacity & transform, not scale/size.

Avoid scale: 0.9 â†’ 1 on large containers (whileInView) â†’ instead animate only child elements.

Font preloading
In <head> (Next.js _document.tsx):

<link rel="preload" href="/fonts/techfont.woff2" as="font" type="font/woff2" crossOrigin="anonymous">


â†’ Prevents FOUT/FOIT jumps.

Fallback height lock while loading

Add a min-height lock until events & spline load:

<div style={{ minHeight: '100dvh', overflow: 'hidden' }}>
  {!isLayoutStable && <div className="fixed inset-0 bg-white z-50" />}
</div>


â†’ Keeps page frozen until layout is fully ready.

ðŸ‘‰ With these, your scroll snapping will feel immediate & stable (no initial "drift then snap").